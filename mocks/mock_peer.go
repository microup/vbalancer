// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/proxy/peer/peer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	vlog "vbalancer/internal/vlog"

	gomock "github.com/golang/mock/gomock"
)

// MockIPeer is a mock of IPeer interface.
type MockIPeer struct {
	ctrl     *gomock.Controller
	recorder *MockIPeerMockRecorder
}

// MockIPeerMockRecorder is the mock recorder for MockIPeer.
type MockIPeerMockRecorder struct {
	mock *MockIPeer
}

// NewMockIPeer creates a new mock instance.
func NewMockIPeer(ctrl *gomock.Controller) *MockIPeer {
	mock := &MockIPeer{ctrl: ctrl}
	mock.recorder = &MockIPeerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPeer) EXPECT() *MockIPeerMockRecorder {
	return m.recorder
}

// GetURI mocks base method.
func (m *MockIPeer) GetURI() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURI")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetURI indicates an expected call of GetURI.
func (mr *MockIPeerMockRecorder) GetURI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURI", reflect.TypeOf((*MockIPeer)(nil).GetURI))
}

// SetLogger mocks base method.
func (m *MockIPeer) SetLogger(arg0 vlog.ILog) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetLogger", arg0)
}

// SetLogger indicates an expected call of SetLogger.
func (mr *MockIPeerMockRecorder) SetLogger(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLogger", reflect.TypeOf((*MockIPeer)(nil).SetLogger), arg0)
}
